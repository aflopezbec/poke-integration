// Mocks generated by Mockito 5.4.5 from annotations
// in poke_detail/test/domain/use_case/get_pokemon_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:poke_detail/core/network/api_response.dart' as _i2;
import 'package:poke_detail/data/dto/ability_dto.dart' as _i6;
import 'package:poke_detail/data/dto/move_dto.dart' as _i7;
import 'package:poke_detail/data/dto/pokemon_dto.dart' as _i5;
import 'package:poke_detail/domain/repository/pokemon_repository.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeServerResponse_0<T> extends _i1.SmartFake
    implements _i2.ServerResponse<T> {
  _FakeServerResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [PokemonRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonRepository extends _i1.Mock implements _i3.PokemonRepository {
  MockPokemonRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ServerResponse<_i5.PokemonDto>> getPokemon(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getPokemon, [id]),
            returnValue: _i4.Future<_i2.ServerResponse<_i5.PokemonDto>>.value(
              _FakeServerResponse_0<_i5.PokemonDto>(
                this,
                Invocation.method(#getPokemon, [id]),
              ),
            ),
          )
          as _i4.Future<_i2.ServerResponse<_i5.PokemonDto>>);

  @override
  _i4.Future<_i2.ServerResponse<List<_i6.AbilityDto>>> getAbilities(
    List<_i6.AbilityDto>? abilities,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getAbilities, [abilities]),
            returnValue:
                _i4.Future<_i2.ServerResponse<List<_i6.AbilityDto>>>.value(
                  _FakeServerResponse_0<List<_i6.AbilityDto>>(
                    this,
                    Invocation.method(#getAbilities, [abilities]),
                  ),
                ),
          )
          as _i4.Future<_i2.ServerResponse<List<_i6.AbilityDto>>>);

  @override
  _i4.Future<_i2.ServerResponse<List<_i7.MoveDto>>> getMoves(
    List<_i7.MoveDto>? moves,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMoves, [moves]),
            returnValue:
                _i4.Future<_i2.ServerResponse<List<_i7.MoveDto>>>.value(
                  _FakeServerResponse_0<List<_i7.MoveDto>>(
                    this,
                    Invocation.method(#getMoves, [moves]),
                  ),
                ),
          )
          as _i4.Future<_i2.ServerResponse<List<_i7.MoveDto>>>);
}
